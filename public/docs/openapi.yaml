openapi: 3.0.3
info:
  title: SecondFusion
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://127.0.0.1'
paths:
  /api/register:
    post:
      summary: Register
      operationId: register
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: First
                  description: 'Name required'
                  example: AppUser
                last_name:
                  type: Last
                  description: 'Name required'
                  example: AppUser
                mobile:
                  type: required
                  description: ''
                  example: '12345678'
                email:
                  type: email
                  description: ''
                  example: example@gmail.com
                zip_code:
                  type: Zip
                  description: 'Code required'
                  example: '313001'
                country_code:
                  type: Country
                  description: 'Code required'
                  example: "+91\n @response {\n     \"status\": 200,\n     \"message\": \"User Register Successfully\",\n     \"username\":\"Ronak data\",\n     \"otp\"     :\"123456\",\n\n}"
                is_terms_agreed:
                  type: string
                  description: ''
                  example: '0'
                  enum:
                    - '1'
                    - '0'
              required:
                - email
      security: []
  /api/send-otp:
    post:
      summary: Send-Otp
      operationId: sendOtp
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mobile:
                  type: mobile
                  description: ''
                  example: '123456789'
                country_code:
                  type: Country
                  description: 'Code required'
                  example: "+91\n @response {\n  \"status\": 200,\n  \"message\": \"Otp Sent Successfully\",\n \"data\": {\n      \"username\": \"Admin\",\n      \"mobile\": \"7976280868\",\n      \"email\": \"juber.sheikh@nyusoft.com\",\n      \"otp\"     :\"123456\",\n }\n }"
              required:
                - mobile
      security: []
  /api/login-with-otp:
    post:
      summary: login-with-otp
      operationId: loginWithOtp
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mobile:
                  type: mobile
                  description: ''
                  example: '123456789'
                otp:
                  type: number
                  description: 'Must be at least 6.'
                  example: 22
                country_code:
                  type: Country
                  description: 'Code required'
                  example: "+91\n @response {\n  \"status\": 200,\n  \"message\": \"Login Successfully\",\n \"data\": {\n\n      \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiI0IiwianRpIjoiZWJhOTI5MGEzMTI2OTgwNTZhZjhlMzEwYjEyOGY4NjJmNDQ1ZDgzYWUyY2E0NjUyMWZlZGIwMDg2NjJkMDk5ZWE5MmM0MmViZGFiOGM2Y2YiLCJpYXQiOjE3MjMxMTM3MDQuNDQ0ODA3LCJuYmYiOjE3MjMxMTM3MDQuNDQ0ODA5LCJleHAiOjE3NTQ2NDk3MDQuNDM5MTgsInN1YiI6IjEiLCJzY29wZXMiOltdfQ.tOW6rzqxyAUtHCPSAqNgAL1HiYEeyJEvu5nDqhdbsGrPKkl8TCdcBigZs98PjmQeJOtRpGmfImkABxxrEN8D1ehoOul_MC50ihN9OaKf81ymoR3RkJ2L8ts3qXRhxuZSvaluugZaUgjZAz5YUwCwfkRVfa8Y4w11e5YynYHs84QZtBthXPVazhTSd-bYtkzZSqHRBsPshbZeQIJRHDdcl5y6OP71PvKmzElX1a755v-LPBDPLU4Dc-gtz98DSItgnvce_iLk6ApKtgr0V6rKlFBbFNK3pDaDMoBZhoUv1TvzbPCEVU0eNq0RftuHId-KX37CtKG-VCvhLSrKmbA3qSN2v9XV9D7GP-RZXaQHxK6UnOk7gImP7227XIyYnZhLoHJKIcWGAtpqwYbG7LHI-ibQxxfDmPfXTj9TcB0kV3KOmcW6PzMSLjiR4V45r7q_aMKpti2bUq2DO_oPelpC53Tf669pXCelsXdS9hiHq4Dxjj1zmwARub9Qxzplx5NCu6R0ex6_yJiBIHkqfffOv7xGzQMki_anRdhjqmLxATBBYmqZc6N8PiFC1jC2GwW0Fa3yB0W_o052t3ElMw86lNF_B3PRYTreQhWz1p3Pw6FbxkCBjncnO0F_q-zjO_RERIH0Fy9swD5io4OuG15v__YYGXVKUObMDQN0GtGYjSU\n }\n }"
              required:
                - mobile
                - otp
      security: []
  /api/logout:
    get:
      summary: Logout
      operationId: logout
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/logout could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/logout could not be found.'
      tags:
        - Authentication
      security: []
  /api/my-profile:
    get:
      summary: My-Profile
      operationId: myProfile
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/my-profile could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/my-profile could not be found.'
      tags:
        - Authentication
      security: []
  /api/update-profile:
    post:
      summary: Profile-Update
      operationId: profileUpdate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: First
                  description: 'Name required'
                  example: AppUser
                last_name:
                  type: string
                  description: 'Must be at least 2 characters. Must not be greater than 190 characters.'
                  example: ajlunspsdhgwqyjhi
                mobile:
                  type: required
                  description: ''
                  example: '12345678'
                email:
                  type: email
                  description: ''
                  example: example@gmail.com
                zip_code:
                  type: Zip
                  description: 'Code required'
                  example: '313001'
                country_code:
                  type: Country
                  description: 'Code required'
                  example: '+91'
                lst_name:
                  type: Last
                  description: 'Name required'
                  example: AppUser
                bio:
                  type: BIO
                  description: ''
                  example: harum
                profile_image:
                  type: Profile
                  description: Image
                  example: non
                gender:
                  type: Gender
                  description: ''
                  example: "{'male','female','other'}"
                is_seller:
                  type: Seller
                  description: ''
                  example: "{true,false}\n @response{\n   \"status\": 200,\n   \"message\": \"Profile Updated Successfully.\",\n   \"data\": null\n\n}"
              required:
                - last_name
                - email
      security: []
  /api/get-address-list:
    get:
      summary: 'Get User All Address'
      operationId: getUserAllAddress
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/get-address-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/get-address-list could not be found.'
      tags:
        - Authentication
      security: []
  /api/store-address:
    post:
      summary: 'Store or Update User Address'
      operationId: storeOrUpdateUserAddress
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: 200
                      message: 'Address Created Successfully.'
                      data:
                        id: 1
                        user_id: 1
                        zip_code: '313001'
                        country: USA
                        state: California
                        city: 'Los Angeles'
                        address: '1234 Elm Street'
                        street: 'Elm Street'
                        status: active
                        is_default: true
                        is_pickup: false
                    properties:
                      status:
                        type: integer
                        example: 200
                      message:
                        type: string
                        example: 'Address Created Successfully.'
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          user_id:
                            type: integer
                            example: 1
                          zip_code:
                            type: string
                            example: '313001'
                          country:
                            type: string
                            example: USA
                          state:
                            type: string
                            example: California
                          city:
                            type: string
                            example: 'Los Angeles'
                          address:
                            type: string
                            example: '1234 Elm Street'
                          street:
                            type: string
                            example: 'Elm Street'
                          status:
                            type: string
                            example: active
                          is_default:
                            type: boolean
                            example: true
                          is_pickup:
                            type: boolean
                            example: false
                  -
                    description: ''
                    type: object
                    example:
                      status: 200
                      message: 'Address Updated Successfully.'
                      data:
                        id: 1
                        user_id: 1
                        zip_code: '313001'
                        country: USA
                        state: California
                        city: 'Los Angeles'
                        address: '1234 Elm Street'
                        street: 'Elm Street'
                        status: active
                        is_default: true
                        is_pickup: false
                    properties:
                      status:
                        type: integer
                        example: 200
                      message:
                        type: string
                        example: 'Address Updated Successfully.'
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          user_id:
                            type: integer
                            example: 1
                          zip_code:
                            type: string
                            example: '313001'
                          country:
                            type: string
                            example: USA
                          state:
                            type: string
                            example: California
                          city:
                            type: string
                            example: 'Los Angeles'
                          address:
                            type: string
                            example: '1234 Elm Street'
                          street:
                            type: string
                            example: 'Elm Street'
                          status:
                            type: string
                            example: active
                          is_default:
                            type: boolean
                            example: true
                          is_pickup:
                            type: boolean
                            example: false
      tags:
        - Authentication
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                address_id:
                  type: integer
                  description: 'The ID of the address to update (if any).'
                  example: 1
                zip_code:
                  type: string
                  description: 'The zip code of the address. required'
                  example: '313001'
                country:
                  type: string
                  description: 'The country of the address. required'
                  example: USA
                state:
                  type: string
                  description: 'The state of the address. required'
                  example: California
                city:
                  type: string
                  description: 'The city of the address. required'
                  example: 'Los Angeles'
                address:
                  type: string
                  description: 'The detailed address. required'
                  example: '1234 Elm Street'
                street:
                  type: string
                  description: 'The street of the address.'
                  example: 'Elm Street'
                is_default:
                  type: boolean
                  description: 'Whether this address is the default address.'
                  example: true
                is_pickup:
                  type: boolean
                  description: 'Whether this address is the pickup address.'
                  example: false
                location_lat:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vnqrsnfctd
                location_long:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vtgcccihvuxdzpfbbhikokl
                status:
                  type: string
                  description: 'The status of the address (e.g., active, inactive).'
                  example: active
      security: []
  /api/update-address:
    post:
      summary: 'Store or Update User Address'
      operationId: storeOrUpdateUserAddress
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                oneOf:
                  -
                    description: ''
                    type: object
                    example:
                      status: 200
                      message: 'Address Created Successfully.'
                      data:
                        id: 1
                        user_id: 1
                        zip_code: '313001'
                        country: USA
                        state: California
                        city: 'Los Angeles'
                        address: '1234 Elm Street'
                        street: 'Elm Street'
                        status: active
                        is_default: true
                        is_pickup: false
                    properties:
                      status:
                        type: integer
                        example: 200
                      message:
                        type: string
                        example: 'Address Created Successfully.'
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          user_id:
                            type: integer
                            example: 1
                          zip_code:
                            type: string
                            example: '313001'
                          country:
                            type: string
                            example: USA
                          state:
                            type: string
                            example: California
                          city:
                            type: string
                            example: 'Los Angeles'
                          address:
                            type: string
                            example: '1234 Elm Street'
                          street:
                            type: string
                            example: 'Elm Street'
                          status:
                            type: string
                            example: active
                          is_default:
                            type: boolean
                            example: true
                          is_pickup:
                            type: boolean
                            example: false
                  -
                    description: ''
                    type: object
                    example:
                      status: 200
                      message: 'Address Updated Successfully.'
                      data:
                        id: 1
                        user_id: 1
                        zip_code: '313001'
                        country: USA
                        state: California
                        city: 'Los Angeles'
                        address: '1234 Elm Street'
                        street: 'Elm Street'
                        status: active
                        is_default: true
                        is_pickup: false
                    properties:
                      status:
                        type: integer
                        example: 200
                      message:
                        type: string
                        example: 'Address Updated Successfully.'
                      data:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          user_id:
                            type: integer
                            example: 1
                          zip_code:
                            type: string
                            example: '313001'
                          country:
                            type: string
                            example: USA
                          state:
                            type: string
                            example: California
                          city:
                            type: string
                            example: 'Los Angeles'
                          address:
                            type: string
                            example: '1234 Elm Street'
                          street:
                            type: string
                            example: 'Elm Street'
                          status:
                            type: string
                            example: active
                          is_default:
                            type: boolean
                            example: true
                          is_pickup:
                            type: boolean
                            example: false
      tags:
        - Authentication
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                address_id:
                  type: integer
                  description: 'The ID of the address to update (if any).'
                  example: 1
                zip_code:
                  type: string
                  description: 'The zip code of the address. required'
                  example: '313001'
                country:
                  type: string
                  description: 'The country of the address. required'
                  example: USA
                state:
                  type: string
                  description: 'The state of the address. required'
                  example: California
                city:
                  type: string
                  description: 'The city of the address. required'
                  example: 'Los Angeles'
                address:
                  type: string
                  description: 'The detailed address. required'
                  example: '1234 Elm Street'
                street:
                  type: string
                  description: 'The street of the address.'
                  example: 'Elm Street'
                is_default:
                  type: boolean
                  description: 'Whether this address is the default address.'
                  example: true
                is_pickup:
                  type: boolean
                  description: 'Whether this address is the pickup address.'
                  example: false
                location_lat:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wzq
                location_long:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jnksgvxczrzlbklcg
                status:
                  type: string
                  description: 'The status of the address (e.g., active, inactive).'
                  example: active
      security: []
  '/api/address-by-id/{id}':
    get:
      summary: Address-By-Id
      operationId: addressById
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  message: 'Getting Address Data Successfully.'
                  data:
                    id: 1
                    user_id: 1
                    zip_code: '313001'
                    country: India
                    state: Gujrat
                    city: Rajkot
                    address: null
                    street: null
                    location_lat: null
                    location_long: null
                    status: active
                    default_address_id: null
                    is_default: 1
                    is_pickup: 1
                    created_at: null
                    updated_at: '2025-08-21T07:54:40.000000Z'
                    deleted_at: null
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Getting Address Data Successfully.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      user_id:
                        type: integer
                        example: 1
                      zip_code:
                        type: string
                        example: '313001'
                      country:
                        type: string
                        example: India
                      state:
                        type: string
                        example: Gujrat
                      city:
                        type: string
                        example: Rajkot
                      address:
                        type: string
                        example: null
                      street:
                        type: string
                        example: null
                      location_lat:
                        type: string
                        example: null
                      location_long:
                        type: string
                        example: null
                      status:
                        type: string
                        example: active
                      default_address_id:
                        type: string
                        example: null
                      is_default:
                        type: integer
                        example: 1
                      is_pickup:
                        type: integer
                        example: 1
                      created_at:
                        type: string
                        example: null
                      updated_at:
                        type: string
                        example: '2025-08-21T07:54:40.000000Z'
                      deleted_at:
                        type: string
                        example: null
      tags:
        - Authentication
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the Address-id.URL/address-by-id/1'
        example: perferendis
        required: true
        schema:
          type: string
  /api/get-suitable:
    post:
      summary: ''
      operationId: postApiGetSuitable
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Banner
      security: []
  /api/get-suitable-list:
    get:
      summary: ''
      operationId: getApiGetSuitableList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/get-suitable-list could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/get-suitable-list could not be found.'
      tags:
        - Banner
      security: []
  /api/get-banners:
    get:
      summary: Get-Banner-List
      operationId: getBannerList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/get-banners could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/get-banners could not be found.'
      tags:
        - Banner
      security: []
  '/api/get-cms/{slug}':
    get:
      summary: CMs-By-Slug
      operationId: cMsBySlug
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  message: 'Getting CMS Page Data Successfully'
                  data:
                    id: 2
                    title: 'Term&Conditions'
                    slug: term-conditions
                    keywords: 'Check Test'
                    content: '<h2>Term&amp;ConditionsTerm&amp;ConditionsTerm&amp;ConditionsTerm&amp;Conditions</h2>'
                    image: null
                    status: inactive
                    created_at: '2024-08-07T07:02:18.000000Z'
                    updated_at: '2024-08-07T07:02:18.000000Z'
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Getting CMS Page Data Successfully'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 2
                      title:
                        type: string
                        example: 'Term&Conditions'
                      slug:
                        type: string
                        example: term-conditions
                      keywords:
                        type: string
                        example: 'Check Test'
                      content:
                        type: string
                        example: '<h2>Term&amp;ConditionsTerm&amp;ConditionsTerm&amp;ConditionsTerm&amp;Conditions</h2>'
                      image:
                        type: string
                        example: null
                      status:
                        type: string
                        example: inactive
                      created_at:
                        type: string
                        example: '2024-08-07T07:02:18.000000Z'
                      updated_at:
                        type: string
                        example: '2024-08-07T07:02:18.000000Z'
      tags:
        - Banner
      security: []
    parameters:
      -
        in: path
        name: slug
        description: 'Optional parameter. The slug of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: aut
      -
        in: path
        name: id
        description: 'The ID of the CMS-id.URL/get-cms/term-conditions'
        example: sit
        required: true
        schema:
          type: string
  /api/get-categories:
    get:
      summary: Get-Parent-Category-list
      operationId: getParentCategoryList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/get-categories could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/get-categories could not be found.'
      tags:
        - Category
      security: []
  '/api/get-subcategories/{id}':
    get:
      summary: Get-SubCategory-list
      operationId: getSubCategoryList
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/get-subcategories/8 could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/get-subcategories/8 could not be found.'
      tags:
        - Category
      security: []
    parameters:
      -
        in: path
        name: id
        description: "The ID of the Category-id.URL/get-subcategories/1\n @response {\n   \"status\": 200,\n   \"message\": \"Getting Sub-Category Data Successfully\",\n   \"data\": {\n       \"current_page\": 1,\n       \"data\": [\n           {\n               \"id\": 3,\n               \"name\": \"jeans Men\",\n               \"image\": \"category/C6Dw91f1Wq.jpg\",\n               \"category_image\": \"http://127.0.0.1:8000/category/C6Dw91f1Wq.jpg\"\n           }\n       ],\n       \"first_page_url\": \"http://127.0.0.1:8000/api/get-subcategories/1?page=1\",\n       \"from\": 1,\n       \"last_page\": 1,\n       \"last_page_url\": \"http://127.0.0.1:8000/api/get-subcategories/1?page=1\",\n       \"links\": [\n           {\n               \"url\": null,\n               \"label\": \"&laquo; Previous\",\n               \"active\": false\n           },\n           {\n               \"url\": \"http://127.0.0.1:8000/api/get-subcategories/1?page=1\",\n               \"label\": \"1\",\n               \"active\": true\n           },\n           {\n               \"url\": null,\n               \"label\": \"Next &raquo;\",\n               \"active\": false\n           }\n       ],\n       \"next_page_url\": null,\n       \"path\": \"http://127.0.0.1:8000/api/get-subcategories/1\",\n       \"per_page\": 10,\n       \"prev_page_url\": null,\n       \"to\": 1,\n       \"total\": 1\n   }\n}"
        example: 8
        required: true
        schema:
          type: integer
  '/api/category-by-id/{id}':
    get:
      summary: Category-By-Id
      operationId: categoryById
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  message: 'Getting Category Data Successfully'
                  data:
                    id: 1
                    name: Mens
                    image: category/nkQoMtCQkV.jpg
                    category_image: 'http://127.0.0.1:8000/category/nkQoMtCQkV.jpg'
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Getting Category Data Successfully'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: Mens
                      image:
                        type: string
                        example: category/nkQoMtCQkV.jpg
                      category_image:
                        type: string
                        example: 'http://127.0.0.1:8000/category/nkQoMtCQkV.jpg'
      tags:
        - Category
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the Category-id.URL/category-by-id/1'
        example: ex
        required: true
        schema:
          type: string
  '/api/product-attribute-list/{id}':
    get:
      summary: Product-Attributes-List
      operationId: productAttributesList
      description: ''
      parameters:
        -
          in: header
          name: "('Access-Control-Allow-Methods:"
          description: ''
          example: "GET, POST, PUT, DELETE, OPTIONS');"
          schema:
            type: string
        -
          in: header
          name: "('Access-Control-Allow-Headers:"
          description: ''
          example: "Content-Type, Authorization, X-Requested-With');"
          schema:
            type: string
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/product-attribute-list/fuga could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/product-attribute-list/fuga could not be found.'
      tags:
        - Product
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: fuga
  /api/product-filter:
    post:
      summary: 'Product Filter'
      operationId: productFilter
      description: 'This endpoint allows you to filter products by brand, size, color, condition, material, and price range.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  message: 'Getting Product List Successfully'
                  data:
                    current_page: 1
                    data:
                      -
                        id: 1
                        user_id: 1
                        product_name: placeat
                        slug: facilis-ut-cupiditate-impedit-officiis-maxime-consequatur-voluptatem
                        size_id: 2
                        price: 100.67
                        created_at: '2024-08-21T06:32:47.000000Z'
                        image: 'https://via.placeholder.com/640x480.png/0077dd?text=et'
                        is_fresh: true
                        product_image: 'https://via.placeholder.com/640x480.png/0077dd?text=et'
                        seller:
                          id: 1
                          first_name: Test-User
                          last_name: '2ndFusion Admin'
                          user_image: {  }
                        size:
                          id: 2
                          name: XL
                      -
                        id: 5
                        user_id: 1
                        product_name: incidunt
                        slug: praesentium-corporis-aut-qui-odio-ea-numquam-perspiciatis
                        size_id: 2
                        price: 403.9
                        created_at: '2024-08-21T06:32:47.000000Z'
                        image: 'https://via.placeholder.com/640x480.png/00eecc?text=impedit'
                        is_fresh: true
                        product_image: 'https://via.placeholder.com/640x480.png/00eecc?text=impedit'
                        seller:
                          id: 1
                          first_name: Test-User
                          last_name: '2ndFusion Admin'
                          user_image: {  }
                        size:
                          id: 2
                          name: XL
                      -
                        id: 6
                        user_id: 1
                        product_name: qui
                        slug: iste-et-et-tenetur-distinctio-incidunt-hic
                        size_id: 1
                        price: 35.86
                        created_at: '2024-08-21T06:32:47.000000Z'
                        image: 'https://via.placeholder.com/640x480.png/0066cc?text=sequi'
                        is_fresh: true
                        product_image: 'https://via.placeholder.com/640x480.png/0066cc?text=sequi'
                        seller:
                          id: 1
                          first_name: Test-User
                          last_name: '2ndFusion Admin'
                          user_image: {  }
                        size:
                          id: 1
                          name: M
                      -
                        id: 8
                        user_id: 1
                        product_name: consequatur
                        slug: perspiciatis-est-sint-corrupti
                        size_id: 1
                        price: 490.23
                        created_at: '2024-08-21T06:32:47.000000Z'
                        image: 'https://via.placeholder.com/640x480.png/00ff00?text=quia'
                        is_fresh: true
                        product_image: 'https://via.placeholder.com/640x480.png/00ff00?text=quia'
                        seller:
                          id: 1
                          first_name: Test-User
                          last_name: '2ndFusion Admin'
                          user_image: {  }
                        size:
                          id: 1
                          name: M
                      -
                        id: 10
                        user_id: 1
                        product_name: perspiciatis
                        slug: aspernatur-quae-quam-tenetur-exercitationem-fugiat-ratione
                        size_id: 2
                        price: 41.99
                        created_at: '2024-08-21T06:32:47.000000Z'
                        image: 'https://via.placeholder.com/640x480.png/00bbaa?text=tenetur'
                        is_fresh: true
                        product_image: 'https://via.placeholder.com/640x480.png/00bbaa?text=tenetur'
                        seller:
                          id: 1
                          first_name: Test-User
                          last_name: '2ndFusion Admin'
                          user_image: {  }
                        size:
                          id: 2
                          name: XL
                      -
                        id: 13
                        user_id: 1
                        product_name: nemo
                        slug: voluptatem-esse-incidunt-minima-eum-et-et-non-consequatur
                        size_id: 2
                        price: 135.61
                        created_at: '2024-08-21T06:32:47.000000Z'
                        image: 'https://via.placeholder.com/640x480.png/0022dd?text=omnis'
                        is_fresh: true
                        product_image: 'https://via.placeholder.com/640x480.png/0022dd?text=omnis'
                        seller:
                          id: 1
                          first_name: Test-User
                          last_name: '2ndFusion Admin'
                          user_image: {  }
                        size:
                          id: 2
                          name: XL
                      -
                        id: 15
                        user_id: 1
                        product_name: est
                        slug: eius-sint-sed-doloribus-perspiciatis
                        size_id: 2
                        price: 227.42
                        created_at: '2024-08-21T06:32:47.000000Z'
                        image: 'https://via.placeholder.com/640x480.png/002211?text=omnis'
                        is_fresh: true
                        product_image: 'https://via.placeholder.com/640x480.png/002211?text=omnis'
                        seller:
                          id: 1
                          first_name: Test-User
                          last_name: '2ndFusion Admin'
                          user_image: {  }
                        size:
                          id: 2
                          name: XL
                      -
                        id: 19
                        user_id: 1
                        product_name: et
                        slug: et-eos-occaecati-eos-rerum-fugiat-inventore-quia
                        size_id: 2
                        price: 283.96
                        created_at: '2024-08-21T06:32:47.000000Z'
                        image: 'https://via.placeholder.com/640x480.png/0011bb?text=facere'
                        is_fresh: true
                        product_image: 'https://via.placeholder.com/640x480.png/0011bb?text=facere'
                        seller:
                          id: 1
                          first_name: Test-User
                          last_name: '2ndFusion Admin'
                          user_image: {  }
                        size:
                          id: 2
                          name: XL
                      -
                        id: 20
                        user_id: 1
                        product_name: ab
                        slug: voluptas-quae-culpa-eveniet-cupiditate-id-nam-aut
                        size_id: 1
                        price: 223.53
                        created_at: '2024-08-21T06:32:47.000000Z'
                        image: 'https://via.placeholder.com/640x480.png/006622?text=minus'
                        is_fresh: true
                        product_image: 'https://via.placeholder.com/640x480.png/006622?text=minus'
                        seller:
                          id: 1
                          first_name: Test-User
                          last_name: '2ndFusion Admin'
                          user_image: {  }
                        size:
                          id: 1
                          name: M
                      -
                        id: 22
                        user_id: 1
                        product_name: quia
                        slug: labore-voluptatem-cumque-est-quis-qui-consequatur-dolor
                        size_id: 1
                        price: 302.08
                        created_at: '2024-08-21T06:32:47.000000Z'
                        image: 'https://via.placeholder.com/640x480.png/002255?text=nihil'
                        is_fresh: true
                        product_image: 'https://via.placeholder.com/640x480.png/002255?text=nihil'
                        seller:
                          id: 1
                          first_name: Test-User
                          last_name: '2ndFusion Admin'
                          user_image: {  }
                        size:
                          id: 1
                          name: M
                    first_page_url: 'https://2ndfusion.nyusoft.in/api/product-filter?page=1'
                    from: 1
                    last_page: 3
                    last_page_url: 'https://2ndfusion.nyusoft.in/api/product-filter?page=3'
                    links:
                      -
                        url: null
                        label: '&laquo; Previous'
                        active: false
                      -
                        url: 'https://2ndfusion.nyusoft.in/api/product-filter?page=1'
                        label: '1'
                        active: true
                      -
                        url: 'https://2ndfusion.nyusoft.in/api/product-filter?page=2'
                        label: '2'
                        active: false
                      -
                        url: 'https://2ndfusion.nyusoft.in/api/product-filter?page=3'
                        label: '3'
                        active: false
                      -
                        url: 'https://2ndfusion.nyusoft.in/api/product-filter?page=2'
                        label: 'Next &raquo;'
                        active: false
                    next_page_url: 'https://2ndfusion.nyusoft.in/api/product-filter?page=2'
                    path: 'https://2ndfusion.nyusoft.in/api/product-filter'
                    per_page: 10
                    prev_page_url: null
                    to: 10
                    total: 26
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Getting Product List Successfully'
                  data:
                    type: object
                    properties:
                      current_page:
                        type: integer
                        example: 1
                      data:
                        type: array
                        example:
                          -
                            id: 1
                            user_id: 1
                            product_name: placeat
                            slug: facilis-ut-cupiditate-impedit-officiis-maxime-consequatur-voluptatem
                            size_id: 2
                            price: 100.67
                            created_at: '2024-08-21T06:32:47.000000Z'
                            image: 'https://via.placeholder.com/640x480.png/0077dd?text=et'
                            is_fresh: true
                            product_image: 'https://via.placeholder.com/640x480.png/0077dd?text=et'
                            seller:
                              id: 1
                              first_name: Test-User
                              last_name: '2ndFusion Admin'
                              user_image: []
                            size:
                              id: 2
                              name: XL
                          -
                            id: 5
                            user_id: 1
                            product_name: incidunt
                            slug: praesentium-corporis-aut-qui-odio-ea-numquam-perspiciatis
                            size_id: 2
                            price: 403.9
                            created_at: '2024-08-21T06:32:47.000000Z'
                            image: 'https://via.placeholder.com/640x480.png/00eecc?text=impedit'
                            is_fresh: true
                            product_image: 'https://via.placeholder.com/640x480.png/00eecc?text=impedit'
                            seller:
                              id: 1
                              first_name: Test-User
                              last_name: '2ndFusion Admin'
                              user_image: []
                            size:
                              id: 2
                              name: XL
                          -
                            id: 6
                            user_id: 1
                            product_name: qui
                            slug: iste-et-et-tenetur-distinctio-incidunt-hic
                            size_id: 1
                            price: 35.86
                            created_at: '2024-08-21T06:32:47.000000Z'
                            image: 'https://via.placeholder.com/640x480.png/0066cc?text=sequi'
                            is_fresh: true
                            product_image: 'https://via.placeholder.com/640x480.png/0066cc?text=sequi'
                            seller:
                              id: 1
                              first_name: Test-User
                              last_name: '2ndFusion Admin'
                              user_image: []
                            size:
                              id: 1
                              name: M
                          -
                            id: 8
                            user_id: 1
                            product_name: consequatur
                            slug: perspiciatis-est-sint-corrupti
                            size_id: 1
                            price: 490.23
                            created_at: '2024-08-21T06:32:47.000000Z'
                            image: 'https://via.placeholder.com/640x480.png/00ff00?text=quia'
                            is_fresh: true
                            product_image: 'https://via.placeholder.com/640x480.png/00ff00?text=quia'
                            seller:
                              id: 1
                              first_name: Test-User
                              last_name: '2ndFusion Admin'
                              user_image: []
                            size:
                              id: 1
                              name: M
                          -
                            id: 10
                            user_id: 1
                            product_name: perspiciatis
                            slug: aspernatur-quae-quam-tenetur-exercitationem-fugiat-ratione
                            size_id: 2
                            price: 41.99
                            created_at: '2024-08-21T06:32:47.000000Z'
                            image: 'https://via.placeholder.com/640x480.png/00bbaa?text=tenetur'
                            is_fresh: true
                            product_image: 'https://via.placeholder.com/640x480.png/00bbaa?text=tenetur'
                            seller:
                              id: 1
                              first_name: Test-User
                              last_name: '2ndFusion Admin'
                              user_image: []
                            size:
                              id: 2
                              name: XL
                          -
                            id: 13
                            user_id: 1
                            product_name: nemo
                            slug: voluptatem-esse-incidunt-minima-eum-et-et-non-consequatur
                            size_id: 2
                            price: 135.61
                            created_at: '2024-08-21T06:32:47.000000Z'
                            image: 'https://via.placeholder.com/640x480.png/0022dd?text=omnis'
                            is_fresh: true
                            product_image: 'https://via.placeholder.com/640x480.png/0022dd?text=omnis'
                            seller:
                              id: 1
                              first_name: Test-User
                              last_name: '2ndFusion Admin'
                              user_image: []
                            size:
                              id: 2
                              name: XL
                          -
                            id: 15
                            user_id: 1
                            product_name: est
                            slug: eius-sint-sed-doloribus-perspiciatis
                            size_id: 2
                            price: 227.42
                            created_at: '2024-08-21T06:32:47.000000Z'
                            image: 'https://via.placeholder.com/640x480.png/002211?text=omnis'
                            is_fresh: true
                            product_image: 'https://via.placeholder.com/640x480.png/002211?text=omnis'
                            seller:
                              id: 1
                              first_name: Test-User
                              last_name: '2ndFusion Admin'
                              user_image: []
                            size:
                              id: 2
                              name: XL
                          -
                            id: 19
                            user_id: 1
                            product_name: et
                            slug: et-eos-occaecati-eos-rerum-fugiat-inventore-quia
                            size_id: 2
                            price: 283.96
                            created_at: '2024-08-21T06:32:47.000000Z'
                            image: 'https://via.placeholder.com/640x480.png/0011bb?text=facere'
                            is_fresh: true
                            product_image: 'https://via.placeholder.com/640x480.png/0011bb?text=facere'
                            seller:
                              id: 1
                              first_name: Test-User
                              last_name: '2ndFusion Admin'
                              user_image: []
                            size:
                              id: 2
                              name: XL
                          -
                            id: 20
                            user_id: 1
                            product_name: ab
                            slug: voluptas-quae-culpa-eveniet-cupiditate-id-nam-aut
                            size_id: 1
                            price: 223.53
                            created_at: '2024-08-21T06:32:47.000000Z'
                            image: 'https://via.placeholder.com/640x480.png/006622?text=minus'
                            is_fresh: true
                            product_image: 'https://via.placeholder.com/640x480.png/006622?text=minus'
                            seller:
                              id: 1
                              first_name: Test-User
                              last_name: '2ndFusion Admin'
                              user_image: []
                            size:
                              id: 1
                              name: M
                          -
                            id: 22
                            user_id: 1
                            product_name: quia
                            slug: labore-voluptatem-cumque-est-quis-qui-consequatur-dolor
                            size_id: 1
                            price: 302.08
                            created_at: '2024-08-21T06:32:47.000000Z'
                            image: 'https://via.placeholder.com/640x480.png/002255?text=nihil'
                            is_fresh: true
                            product_image: 'https://via.placeholder.com/640x480.png/002255?text=nihil'
                            seller:
                              id: 1
                              first_name: Test-User
                              last_name: '2ndFusion Admin'
                              user_image: []
                            size:
                              id: 1
                              name: M
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            user_id:
                              type: integer
                              example: 1
                            product_name:
                              type: string
                              example: placeat
                            slug:
                              type: string
                              example: facilis-ut-cupiditate-impedit-officiis-maxime-consequatur-voluptatem
                            size_id:
                              type: integer
                              example: 2
                            price:
                              type: number
                              example: 100.67
                            created_at:
                              type: string
                              example: '2024-08-21T06:32:47.000000Z'
                            image:
                              type: string
                              example: 'https://via.placeholder.com/640x480.png/0077dd?text=et'
                            is_fresh:
                              type: boolean
                              example: true
                            product_image:
                              type: string
                              example: 'https://via.placeholder.com/640x480.png/0077dd?text=et'
                            seller:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 1
                                first_name:
                                  type: string
                                  example: Test-User
                                last_name:
                                  type: string
                                  example: '2ndFusion Admin'
                                user_image:
                                  type: object
                                  properties: {  }
                            size:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 2
                                name:
                                  type: string
                                  example: XL
                      first_page_url:
                        type: string
                        example: 'https://2ndfusion.nyusoft.in/api/product-filter?page=1'
                      from:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 3
                      last_page_url:
                        type: string
                        example: 'https://2ndfusion.nyusoft.in/api/product-filter?page=3'
                      links:
                        type: array
                        example:
                          -
                            url: null
                            label: '&laquo; Previous'
                            active: false
                          -
                            url: 'https://2ndfusion.nyusoft.in/api/product-filter?page=1'
                            label: '1'
                            active: true
                          -
                            url: 'https://2ndfusion.nyusoft.in/api/product-filter?page=2'
                            label: '2'
                            active: false
                          -
                            url: 'https://2ndfusion.nyusoft.in/api/product-filter?page=3'
                            label: '3'
                            active: false
                          -
                            url: 'https://2ndfusion.nyusoft.in/api/product-filter?page=2'
                            label: 'Next &raquo;'
                            active: false
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              example: null
                            label:
                              type: string
                              example: '&laquo; Previous'
                            active:
                              type: boolean
                              example: false
                      next_page_url:
                        type: string
                        example: 'https://2ndfusion.nyusoft.in/api/product-filter?page=2'
                      path:
                        type: string
                        example: 'https://2ndfusion.nyusoft.in/api/product-filter'
                      per_page:
                        type: integer
                        example: 10
                      prev_page_url:
                        type: string
                        example: null
                      to:
                        type: integer
                        example: 10
                      total:
                        type: integer
                        example: 26
      tags:
        - Product
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                brand:
                  type: array
                  description: 'Optional. An array of brand IDs to filter the products by.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                suitable:
                  type: array
                  description: 'Optional. An array of suitable IDs to filter the products by.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                category:
                  type: array
                  description: 'Optional. An array of category IDs to filter the products by.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                size:
                  type: array
                  description: 'Optional. An array of size IDs to filter the products by.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                color:
                  type: array
                  description: 'Optional. An array of color IDs to filter the products by.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                condition:
                  type: array
                  description: 'Optional. An array of condition IDs to filter the products by.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                material:
                  type: array
                  description: 'Optional. An array of material IDs to filter the products by.'
                  example:
                    - 1
                    - 2
                    - 3
                  items:
                    type: string
                start_price:
                  type: number
                  description: 'Optional. The minimum price to filter the products by.'
                  example: 100.0
                end_price:
                  type: number
                  description: 'Optional. The maximum price to filter the products by.'
                  example: 500.0
                sortby:
                  type: string
                  description: ''
                  example: high-to-low
                  enum:
                    - Newest
                    - low-to-high
                    - high-to-low
      security: []
  '/api/product-by-id/{id}':
    get:
      summary: 'Product By ID'
      operationId: productByID
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  message: 'Getting Product details Successfully'
                  data:
                    id: 1
                    product_name: sit
                    slug: nemo-voluptatem-ab-dolorem-enim-recusandae-inventore-eos
                    user_id: 1
                    category_id: 1
                    brand_id: 2
                    size_id: 2
                    material_id: 1
                    color_id: 1
                    condition_id: 2
                    suitable_id: null
                    description: 'Modi molestiae rem quia voluptas hic sed. Veritatis voluptate vitae quaerat cupiditate sit labore consequatur. Aut dignissimos et et qui maxime omnis enim cumque.'
                    cloth_type: old
                    stock: 17
                    price: 448.04
                    image: 'https://via.placeholder.com/640x480.png/008800?text=tempora'
                    is_approved: 0
                    status: active
                    created_at: '2024-08-07T10:05:30.000000Z'
                    updated_at: '2024-08-07T10:05:30.000000Z'
                    deleted_at: null
                    product_image:
                      -
                        id: 1
                        product_id: 1
                        image: 'https://via.placeholder.com/640x480.png/008800?text=tempora'
                      -
                        id: 2
                        product_id: 1
                        image: 'https://via.placeholder.com/640x480.png/008800?text=tempora'
                    category:
                      id: 1
                      name: Mens
                      parent_id: null
                      image: category/nkQoMtCQkV.jpg
                      category_image: 'http://127.0.0.1:8000/category/nkQoMtCQkV.jpg'
                    size:
                      id: 2
                      name: 'With tag'
                    color:
                      id: 1
                      name: Blueasdasd
                      color_code: '#720808'
                    material:
                      id: 1
                      name: Cotton
                    condition:
                      id: 2
                      name: 'very old'
                    brand:
                      id: 2
                      name: asdasdasdasd
                      image: brand/qoajwCw4Pd.png
                      brand_image: 'http://127.0.0.1:8000/brand/qoajwCw4Pd.png'
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Getting Product details Successfully'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      product_name:
                        type: string
                        example: sit
                      slug:
                        type: string
                        example: nemo-voluptatem-ab-dolorem-enim-recusandae-inventore-eos
                      user_id:
                        type: integer
                        example: 1
                      category_id:
                        type: integer
                        example: 1
                      brand_id:
                        type: integer
                        example: 2
                      size_id:
                        type: integer
                        example: 2
                      material_id:
                        type: integer
                        example: 1
                      color_id:
                        type: integer
                        example: 1
                      condition_id:
                        type: integer
                        example: 2
                      suitable_id:
                        type: string
                        example: null
                      description:
                        type: string
                        example: 'Modi molestiae rem quia voluptas hic sed. Veritatis voluptate vitae quaerat cupiditate sit labore consequatur. Aut dignissimos et et qui maxime omnis enim cumque.'
                      cloth_type:
                        type: string
                        example: old
                      stock:
                        type: integer
                        example: 17
                      price:
                        type: number
                        example: 448.04
                      image:
                        type: string
                        example: 'https://via.placeholder.com/640x480.png/008800?text=tempora'
                      is_approved:
                        type: integer
                        example: 0
                      status:
                        type: string
                        example: active
                      created_at:
                        type: string
                        example: '2024-08-07T10:05:30.000000Z'
                      updated_at:
                        type: string
                        example: '2024-08-07T10:05:30.000000Z'
                      deleted_at:
                        type: string
                        example: null
                      product_image:
                        type: array
                        example:
                          -
                            id: 1
                            product_id: 1
                            image: 'https://via.placeholder.com/640x480.png/008800?text=tempora'
                          -
                            id: 2
                            product_id: 1
                            image: 'https://via.placeholder.com/640x480.png/008800?text=tempora'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            product_id:
                              type: integer
                              example: 1
                            image:
                              type: string
                              example: 'https://via.placeholder.com/640x480.png/008800?text=tempora'
                      category:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: Mens
                          parent_id:
                            type: string
                            example: null
                          image:
                            type: string
                            example: category/nkQoMtCQkV.jpg
                          category_image:
                            type: string
                            example: 'http://127.0.0.1:8000/category/nkQoMtCQkV.jpg'
                      size:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          name:
                            type: string
                            example: 'With tag'
                      color:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: Blueasdasd
                          color_code:
                            type: string
                            example: '#720808'
                      material:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: Cotton
                      condition:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          name:
                            type: string
                            example: 'very old'
                      brand:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 2
                          name:
                            type: string
                            example: asdasdasdasd
                          image:
                            type: string
                            example: brand/qoajwCw4Pd.png
                          brand_image:
                            type: string
                            example: 'http://127.0.0.1:8000/brand/qoajwCw4Pd.png'
      tags:
        - Product
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: fuga
  /api/product-store:
    post:
      summary: 'Store or Update a Product'
      operationId: storeOrUpdateAProduct
      description: 'This function handles the creation or update of a product, including its main image and additional product images.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Product stored or updated successfully'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Product stored or updated successfully'
      tags:
        - Product
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  description: 'The ID of the product to update. Required if updating an existing product.'
                  example: 4
                product_name:
                  type: string
                  description: 'The name of the product.'
                  example: unde
                category_id:
                  type: integer
                  description: 'The ID of the category to which the product belongs.'
                  example: 2
                default_pickup_id:
                  type: integer
                  description: 'The ID of the default pickup location.'
                  example: 9
                brand_id:
                  type: integer
                  description: 'The ID of the product brand.'
                  example: 16
                size_id:
                  type: integer
                  description: 'The ID of the product  size.'
                  example: 19
                material_id:
                  type: integer
                  description: 'The ID of the product material.'
                  example: 16
                condition_id:
                  type: integer
                  description: 'The ID of the product condition.'
                  example: 1
                color_id:
                  type: integer
                  description: 'The ID of the product color.'
                  example: 19
                suitable_id:
                  type: integer
                  description: "The ID of the product's suitable category."
                  example: 16
                description:
                  type: string
                  description: 'The description of the product.'
                  example: 'Rerum vel dignissimos impedit.'
                cloth_type:
                  type: string
                  description: 'The type of cloth for the product.'
                  example: totam
                stock:
                  type: integer
                  description: 'The stock quantity of the product.'
                  example: 14
                price:
                  type: number
                  description: 'The price of the product.'
                  example: 48465.91
                image:
                  type: string
                  format: binary
                  description: 'The main image of the product. If not provided and updating, the existing image will be retained.'
                product_images:
                  type: array
                  description: 'An array of images to be associated with the product.'
                  example:
                    - eligendi
                  items:
                    type: string
                status:
                  type: string
                  description: ''
                  example: active
                  enum:
                    - active
                    - inactive
              required:
                - product_name
                - category_id
                - brand_id
                - size_id
                - material_id
                - condition_id
                - color_id
                - suitable_id
                - status
      security: []
  /api/product-update:
    post:
      summary: 'Store or Update a Product'
      operationId: storeOrUpdateAProduct
      description: 'This function handles the creation or update of a product, including its main image and additional product images.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Product stored or updated successfully'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Product stored or updated successfully'
      tags:
        - Product
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                  description: 'The ID of the product to update. Required if updating an existing product.'
                  example: 4
                product_name:
                  type: string
                  description: 'The name of the product.'
                  example: quo
                category_id:
                  type: integer
                  description: 'The ID of the category to which the product belongs.'
                  example: 14
                default_pickup_id:
                  type: integer
                  description: 'The ID of the default pickup location.'
                  example: 5
                brand_id:
                  type: integer
                  description: 'The ID of the product brand.'
                  example: 7
                size_id:
                  type: integer
                  description: 'The ID of the product  size.'
                  example: 11
                material_id:
                  type: integer
                  description: 'The ID of the product material.'
                  example: 7
                condition_id:
                  type: integer
                  description: 'The ID of the product condition.'
                  example: 2
                color_id:
                  type: integer
                  description: 'The ID of the product color.'
                  example: 20
                suitable_id:
                  type: integer
                  description: "The ID of the product's suitable category."
                  example: 10
                description:
                  type: string
                  description: 'The description of the product.'
                  example: 'Soluta alias facilis et dolores est.'
                cloth_type:
                  type: string
                  description: 'The type of cloth for the product.'
                  example: quo
                stock:
                  type: integer
                  description: 'The stock quantity of the product.'
                  example: 11
                price:
                  type: number
                  description: 'The price of the product.'
                  example: 13900.7292019
                image:
                  type: string
                  format: binary
                  description: 'The main image of the product. If not provided and updating, the existing image will be retained.'
                product_images:
                  type: array
                  description: 'An array of images to be associated with the product.'
                  example:
                    - voluptas
                  items:
                    type: string
                status:
                  type: string
                  description: ''
                  example: active
                  enum:
                    - active
                    - inactive
              required:
                - product_name
                - category_id
                - brand_id
                - size_id
                - material_id
                - condition_id
                - color_id
                - suitable_id
                - status
      security: []
  '/api/product-image-delete/{id}':
    get:
      summary: 'Delete a Product Image'
      operationId: deleteAProductImage
      description: 'This function deletes a product image by its ID if it exists in the database.'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  message: 'Product Image Deleted Successfully'
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Product Image Deleted Successfully'
      tags:
        - Product
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product image to delete.'
        example: 6
        required: true
        schema:
          type: integer
  '/api/product-delete/{id}':
    get:
      summary: 'Delete a product if it is not approved.'
      operationId: deleteAProductIfItIsNotApproved
      description: 'This endpoint deletes a product based on the given ID if the product has not been approved (`is_approved` = 0).'
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 200
                  message: 'Products Deleted successfully'
                  data: null
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Products Deleted successfully'
                  data:
                    type: string
                    example: null
        400:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: 400
                  message: "Can't Delete Approved Products! Please contact admin"
                  data: null
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Can't Delete Approved Products! Please contact admin"
                  data:
                    type: string
                    example: null
      tags:
        - Product
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the product to delete.'
        example: 5
        required: true
        schema:
          type: integer
  '/api/my-products/{type}':
    get:
      summary: "Get User's Products by Approval Status"
      operationId: getUsersProductsByApprovalStatus
      description: "This function retrieves the current user's products based on the approval status."
      parameters:
        -
          in: query
          name: type
          description: "Filter products by approval status. Use 'approved' to retrieve approved products. If not provided, unapproved products will be returned."
          example: quam
          required: false
          schema:
            type: string
            description: "Filter products by approval status. Use 'approved' to retrieve approved products. If not provided, unapproved products will be returned."
            example: quam
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n  \"success\": true,\n  \"message\": \"Products retrieved successfully\",\n  \"data\": {\n    \"current_page\": 1,\n    \"data\": [\n      {\n        \"id\": 1,\n        \"product_name\": \"Example Product\",\n        \"user_id\": 1,\n        \"is_approved\": 1,\n        ...\n      },\n      ...\n    ],\n    ...\n  }\n}"
      tags:
        - Product
      security: []
    parameters:
      -
        in: path
        name: type
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: beatae
  /api/get-wishlist:
    get:
      summary: Get-Wishlist
      operationId: getWishlist
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/get-wishlist could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/get-wishlist could not be found.'
      tags:
        - Wishlist
      security: []
  /api/add-to-wishlist:
    post:
      summary: 'Add Product into Wishlist'
      operationId: addProductIntoWishlist
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Wishlist
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                product_id:
                  type: Product
                  description: 'Id required'
                  example: "1\n @response {\n   \"status\": 200,\n   \"message\": \"Added to Wishlist Successfully\",\n   \"data\": {\n       \"user_id\": 1,\n       \"product_id\": \"3\",\n       \"updated_at\": \"2024-08-13T09:59:00.000000Z\",\n       \"created_at\": \"2024-08-13T09:59:00.000000Z\",\n       \"id\": 5\n   }\n}"
      security: []
  '/api/remove-wishlist/{id}':
    get:
      summary: 'Remove Product From Wishlist'
      operationId: removeProductFromWishlist
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/remove-wishlist/itaque could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/remove-wishlist/itaque could not be found.'
      tags:
        - Wishlist
      security: []
    parameters:
      -
        in: path
        name: id
        description: "The ID of the Wishlist-id.URL/remove-wishlist/1\n @response {\n   \"status\": 200,\n   \"message\": \"Successfully Removed From Wishlist\",\n   \"data\": null\n}"
        example: itaque
        required: true
        schema:
          type: string
tags:
  -
    name: Authentication
    description: "\nAPIs for authentication,Registration and Send Otp and Login With Otp and Profile Update or Get User Profile,get-address-list,store-address,update-address,address-by-id/{id?},"
  -
    name: Banner
    description: "\nAPIs for Banner"
  -
    name: Category
    description: "\nAPIs for Category,Sub-Categories and Category By Id"
  -
    name: Product
    description: "\nAPIs for Product Related Apis,Create Product,Product Attributes list,Product Delete"
  -
    name: Wishlist
    description: "\nAPIs for Add Product in wishlist,Remove product from wishlist and get wishlist data"
